|signal
TTL <= count:inst2.clk_out
CLK => count:inst2.CLK
CLK => PLL:inst.CLK_48
KEY1 => count:inst2.KEY1
KEY2 => count:inst2.KEY2
rst_n => count:inst2.rst_n
IRDA => ir_module:inst1.ir
TEST_1M <= PLL:inst.clk_1M
sin7 <= sin_block:inst5.sin7
sin6 <= sin_block:inst5.sin6
sin5 <= sin_block:inst5.sin5
sin4 <= sin_block:inst5.sin4
sin3 <= sin_block:inst5.sin3
sin2 <= sin_block:inst5.sin2
sin0 <= sin_block:inst5.sin0
sni1 <= sin_block:inst5.sin1
clk_hz <= clk_hz:inst3.clk_out
clk_10M <= PLL:inst.clk_10M
100K <= PLL:inst.clk_100K
DS_A <= count:inst2.DS_A
DS_B <= count:inst2.DS_B
DS_E <= count:inst2.DS_E
DS_F <= count:inst2.DS_F
DS_EN1 <= count:inst2.DS_EN1
DS_EN2 <= count:inst2.DS_EN2
DS_EN3 <= count:inst2.DS_EN3
DS_EN4 <= count:inst2.DS_EN4
DS_C <= count:inst2.DS_C
DS_D <= count:inst2.DS_D
DS_G <= count:inst2.DS_G
DS_DP <= count:inst2.DS_DP


|signal|count:inst2
CLK => CLK.IN1
KEY1 => ~NO_FANOUT~
KEY2 => code.OUTPUTSELECT
KEY2 => code.OUTPUTSELECT
KEY2 => code.OUTPUTSELECT
KEY2 => code.OUTPUTSELECT
KEY2 => code.OUTPUTSELECT
KEY2 => code.OUTPUTSELECT
KEY2 => code.OUTPUTSELECT
KEY2 => code.OUTPUTSELECT
KEY2 => code.OUTPUTSELECT
KEY2 => code.OUTPUTSELECT
KEY2 => code.OUTPUTSELECT
KEY2 => code.OUTPUTSELECT
KEY2 => code.OUTPUTSELECT
KEY2 => code.OUTPUTSELECT
KEY2 => code.OUTPUTSELECT
KEY2 => code.OUTPUTSELECT
KEY2 => num_4[0].ENA
KEY2 => num_4[1].ENA
ir_code[0] => Decoder1.IN7
ir_code[1] => Decoder1.IN6
ir_code[2] => Decoder1.IN5
ir_code[3] => Decoder1.IN4
ir_code[4] => Decoder1.IN3
ir_code[5] => Decoder1.IN2
ir_code[6] => Decoder1.IN1
ir_code[7] => Decoder1.IN0
clk_in => clk_out~reg0.CLK
clk_in => cnt[0].CLK
clk_in => cnt[1].CLK
clk_in => cnt[2].CLK
clk_in => cnt[3].CLK
clk_in => cnt[4].CLK
clk_in => cnt[5].CLK
clk_in => cnt[6].CLK
clk_in => cnt[7].CLK
clk_in => cnt[8].CLK
clk_in => cnt[9].CLK
clk_in => cnt[10].CLK
clk_in => cnt[11].CLK
clk_in => cnt[12].CLK
clk_in => cnt[13].CLK
clk_in => cnt[14].CLK
clk_in => cnt[15].CLK
clk_in => cnt[16].CLK
clk_in => cnt[17].CLK
clk_in => cnt[18].CLK
clk_in => cnt[19].CLK
clk_in => cnt[20].CLK
clk_in => cnt[21].CLK
clk_in => cnt[22].CLK
clk_in => cnt[23].CLK
clk_in => cnt[24].CLK
clk_in => cnt[25].CLK
clk_in => cnt[26].CLK
clk_in => cnt[27].CLK
clk_in => cnt[28].CLK
clk_in => cnt[29].CLK
clk_in => cnt[30].CLK
clk_in => cnt[31].CLK
clk_hz => num[2].CLK
clk_hz => num[3].CLK
clk_hz => num[4].CLK
clk_hz => num[5].CLK
clk_hz => num[6].CLK
clk_hz => num[7].CLK
clk_hz => num[8].CLK
clk_hz => num[9].CLK
clk_hz => num[10].CLK
clk_hz => num[11].CLK
clk_hz => num[12].CLK
clk_hz => num[13].CLK
clk_hz => num[14].CLK
clk_hz => num[15].CLK
clk_hz => num[16].CLK
clk_hz => num[17].CLK
clk_hz => num[18].CLK
clk_hz => num[19].CLK
clk_hz => num[20].CLK
clk_hz => num[21].CLK
clk_hz => num[22].CLK
clk_hz => num[23].CLK
clk_hz => num[24].CLK
clk_hz => num[25].CLK
clk_hz => num[26].CLK
clk_hz => num[27].CLK
clk_hz => num[28].CLK
clk_hz => num[29].CLK
clk_hz => num[30].CLK
clk_hz => num[31].CLK
clk_hz => tmp2[0].CLK
clk_hz => tmp2[1].CLK
clk_hz => tmp2[2].CLK
clk_hz => tmp2[3].CLK
clk_hz => tmp2[4].CLK
clk_hz => tmp2[5].CLK
clk_hz => tmp2[6].CLK
clk_hz => tmp2[7].CLK
clk_hz => tmp2[8].CLK
clk_hz => tmp2[9].CLK
clk_hz => tmp2[10].CLK
clk_hz => tmp2[11].CLK
clk_hz => tmp2[12].CLK
clk_hz => tmp2[13].CLK
clk_hz => tmp2[14].CLK
clk_hz => tmp2[15].CLK
clk_hz => tmp2[16].CLK
clk_hz => tmp2[17].CLK
clk_hz => tmp2[18].CLK
clk_hz => tmp2[19].CLK
clk_hz => tmp2[20].CLK
clk_hz => tmp2[21].CLK
clk_hz => tmp2[22].CLK
clk_hz => tmp2[23].CLK
clk_hz => tmp2[24].CLK
clk_hz => tmp2[25].CLK
clk_hz => tmp2[26].CLK
clk_hz => tmp2[27].CLK
clk_hz => tmp2[28].CLK
clk_hz => tmp2[29].CLK
clk_hz => tmp2[30].CLK
clk_hz => tmp2[31].CLK
clk_hz => code[0][0].CLK
clk_hz => code[0][1].CLK
clk_hz => code[0][2].CLK
clk_hz => code[0][3].CLK
clk_hz => code[1][0].CLK
clk_hz => code[1][1].CLK
clk_hz => code[1][2].CLK
clk_hz => code[1][3].CLK
clk_hz => code[2][0].CLK
clk_hz => code[2][1].CLK
clk_hz => code[2][2].CLK
clk_hz => code[2][3].CLK
clk_hz => code[3][0].CLK
clk_hz => code[3][1].CLK
clk_hz => code[3][2].CLK
clk_hz => code[3][3].CLK
clk_hz => num_4[0].CLK
clk_hz => num_4[1].CLK
rst_n => cnt[0].ACLR
rst_n => cnt[1].ACLR
rst_n => cnt[2].ACLR
rst_n => cnt[3].ACLR
rst_n => cnt[4].ACLR
rst_n => cnt[5].ACLR
rst_n => cnt[6].ACLR
rst_n => cnt[7].ACLR
rst_n => cnt[8].ACLR
rst_n => cnt[9].ACLR
rst_n => cnt[10].ACLR
rst_n => cnt[11].ACLR
rst_n => cnt[12].ACLR
rst_n => cnt[13].ACLR
rst_n => cnt[14].ACLR
rst_n => cnt[15].ACLR
rst_n => cnt[16].ACLR
rst_n => cnt[17].ACLR
rst_n => cnt[18].ACLR
rst_n => cnt[19].ACLR
rst_n => cnt[20].ACLR
rst_n => cnt[21].ACLR
rst_n => cnt[22].ACLR
rst_n => cnt[23].ACLR
rst_n => cnt[24].ACLR
rst_n => cnt[25].ACLR
rst_n => cnt[26].ACLR
rst_n => cnt[27].ACLR
rst_n => cnt[28].ACLR
rst_n => cnt[29].ACLR
rst_n => cnt[30].ACLR
rst_n => cnt[31].ACLR
rst_n => clk_out~reg0.PRESET
clk_out <= clk_out~reg0.DB_MAX_OUTPUT_PORT_TYPE
DS_A <= dt_module:dt_ct.ds_reg
DS_B <= dt_module:dt_ct.ds_reg
DS_E <= dt_module:dt_ct.ds_reg
DS_F <= dt_module:dt_ct.ds_reg
DS_EN1 <= dt_module:dt_ct.ds_en
DS_EN2 <= dt_module:dt_ct.ds_en
DS_EN3 <= dt_module:dt_ct.ds_en
DS_EN4 <= dt_module:dt_ct.ds_en
DS_C <= dt_module:dt_ct.ds_reg
DS_D <= dt_module:dt_ct.ds_reg
DS_G <= dt_module:dt_ct.ds_reg
DS_DP <= <GND>


|signal|count:inst2|dt_module:dt_ct
clk => ds_en[0]~reg0.CLK
clk => ds_en[1]~reg0.CLK
clk => ds_en[2]~reg0.CLK
clk => ds_en[3]~reg0.CLK
clk => ds_reg[0]~reg0.CLK
clk => ds_reg[1]~reg0.CLK
clk => ds_reg[2]~reg0.CLK
clk => ds_reg[3]~reg0.CLK
clk => ds_reg[4]~reg0.CLK
clk => ds_reg[5]~reg0.CLK
clk => ds_reg[6]~reg0.CLK
clk => cnt[0].CLK
clk => cnt[1].CLK
clk => cnt[2].CLK
clk => cnt[3].CLK
clk => cnt[4].CLK
clk => cnt[5].CLK
clk => cnt[6].CLK
clk => cnt[7].CLK
clk => cnt[8].CLK
clk => cnt[9].CLK
clk => cnt[10].CLK
clk => cnt[11].CLK
clk => cnt[12].CLK
clk => cnt[13].CLK
clk => cnt[14].CLK
clk => cnt[15].CLK
clk => cnt[16].CLK
clk => cnt[17].CLK
clk => cnt[18].CLK
clk => cnt[19].CLK
clk => cnt[20].CLK
clk => cnt[21].CLK
clk => cnt[22].CLK
clk => cnt[23].CLK
clk => cnt[24].CLK
clk => cnt[25].CLK
clk => cnt[26].CLK
clk => cnt[27].CLK
clk => cnt[28].CLK
clk => cnt[29].CLK
clk => cnt[30].CLK
clk => cnt[31].CLK
num1[0] => Decoder0.IN3
num1[1] => Decoder0.IN2
num1[2] => Decoder0.IN1
num1[3] => Decoder0.IN0
num2[0] => Decoder1.IN3
num2[1] => Decoder1.IN2
num2[2] => Decoder1.IN1
num2[3] => Decoder1.IN0
num3[0] => Decoder2.IN3
num3[1] => Decoder2.IN2
num3[2] => Decoder2.IN1
num3[3] => Decoder2.IN0
num4[0] => Decoder3.IN3
num4[1] => Decoder3.IN2
num4[2] => Decoder3.IN1
num4[3] => Decoder3.IN0
ds_en[0] <= ds_en[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ds_en[1] <= ds_en[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ds_en[2] <= ds_en[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ds_en[3] <= ds_en[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ds_reg[0] <= ds_reg[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ds_reg[1] <= ds_reg[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ds_reg[2] <= ds_reg[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ds_reg[3] <= ds_reg[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ds_reg[4] <= ds_reg[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ds_reg[5] <= ds_reg[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ds_reg[6] <= ds_reg[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|signal|PLL:inst
clk_1M <= altpll0:inst.c1
CLK_48 => altpll0:inst.inclk0
CLK_100M <= altpll1:inst1.c0
clk_10M <= altpll0:inst.c2
clk_100K <= altpll0:inst.c3


|signal|PLL:inst|altpll0:inst
inclk0 => sub_wire6[0].IN1
c0 <= altpll:altpll_component.clk
c1 <= altpll:altpll_component.clk
c2 <= altpll:altpll_component.clk
c3 <= altpll:altpll_component.clk


|signal|PLL:inst|altpll0:inst|altpll:altpll_component
inclk[0] => altpll0_altpll:auto_generated.inclk[0]
inclk[1] => altpll0_altpll:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => ~NO_FANOUT~
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= <GND>
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|signal|PLL:inst|altpll0:inst|altpll:altpll_component|altpll0_altpll:auto_generated
clk[0] <= pll1.CLK
clk[1] <= pll1.CLK1
clk[2] <= pll1.CLK2
clk[3] <= pll1.CLK3
clk[4] <= pll1.CLK4
inclk[0] => pll1.CLK
inclk[1] => pll1.CLK1


|signal|PLL:inst|altpll1:inst1
inclk0 => sub_wire3[0].IN1
c0 <= altpll:altpll_component.clk


|signal|PLL:inst|altpll1:inst1|altpll:altpll_component
inclk[0] => altpll1_altpll:auto_generated.inclk[0]
inclk[1] => altpll1_altpll:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => ~NO_FANOUT~
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= <GND>
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|signal|PLL:inst|altpll1:inst1|altpll:altpll_component|altpll1_altpll:auto_generated
clk[0] <= pll1.CLK
clk[1] <= pll1.CLK1
clk[2] <= pll1.CLK2
clk[3] <= pll1.CLK3
clk[4] <= pll1.CLK4
inclk[0] => pll1.CLK
inclk[1] => pll1.CLK1


|signal|clk_hz:inst3
clk_in => clk_out~reg0.CLK
clk_in => cnt[0].CLK
clk_in => cnt[1].CLK
clk_in => cnt[2].CLK
clk_in => cnt[3].CLK
clk_in => cnt[4].CLK
clk_in => cnt[5].CLK
clk_in => cnt[6].CLK
clk_in => cnt[7].CLK
clk_in => cnt[8].CLK
clk_in => cnt[9].CLK
clk_in => cnt[10].CLK
clk_in => cnt[11].CLK
clk_in => cnt[12].CLK
clk_in => cnt[13].CLK
clk_in => cnt[14].CLK
clk_in => cnt[15].CLK
clk_in => cnt[16].CLK
clk_in => cnt[17].CLK
clk_in => cnt[18].CLK
clk_in => cnt[19].CLK
clk_in => cnt[20].CLK
clk_in => cnt[21].CLK
clk_in => cnt[22].CLK
clk_in => cnt[23].CLK
clk_in => cnt[24].CLK
clk_in => cnt[25].CLK
clk_in => cnt[26].CLK
clk_in => cnt[27].CLK
clk_in => cnt[28].CLK
clk_in => cnt[29].CLK
clk_in => cnt[30].CLK
clk_in => cnt[31].CLK
clk_out <= clk_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|signal|ir_module:inst1
clk_1m => Code[0]~reg0.CLK
clk_1m => Code[1]~reg0.CLK
clk_1m => Code[2]~reg0.CLK
clk_1m => Code[3]~reg0.CLK
clk_1m => Code[4]~reg0.CLK
clk_1m => Code[5]~reg0.CLK
clk_1m => Code[6]~reg0.CLK
clk_1m => Code[7]~reg0.CLK
clk_1m => IR_Value[0].CLK
clk_1m => IR_Value[1].CLK
clk_1m => IR_Value[2].CLK
clk_1m => IR_Value[3].CLK
clk_1m => IR_Value[4].CLK
clk_1m => IR_Value[5].CLK
clk_1m => IR_Value[6].CLK
clk_1m => IR_Value[7].CLK
clk_1m => IR_Value[8].CLK
clk_1m => IR_Value[9].CLK
clk_1m => IR_Value[10].CLK
clk_1m => IR_Value[11].CLK
clk_1m => IR_Value[12].CLK
clk_1m => IR_Value[13].CLK
clk_1m => IR_Value[14].CLK
clk_1m => IR_Value[15].CLK
clk_1m => cnt_num[0].CLK
clk_1m => cnt_num[1].CLK
clk_1m => cnt_num[2].CLK
clk_1m => cnt_num[3].CLK
clk_1m => cnt_num[4].CLK
clk_1m => cnt_num[5].CLK
clk_1m => cnt_val[0].CLK
clk_1m => cnt_val[1].CLK
clk_1m => cnt_val[2].CLK
clk_1m => cnt_val[3].CLK
clk_1m => cnt_val[4].CLK
clk_1m => cnt_val[5].CLK
clk_1m => cnt_val[6].CLK
clk_1m => cnt_val[7].CLK
clk_1m => cnt_val[8].CLK
clk_1m => cnt_val[9].CLK
clk_1m => cnt_val[10].CLK
clk_1m => cnt_val[11].CLK
clk_1m => cnt_val[12].CLK
clk_1m => cnt_val[13].CLK
clk_1m => cnt_val[14].CLK
clk_1m => cnt_val[15].CLK
clk_1m => cnt_h[0].CLK
clk_1m => cnt_h[1].CLK
clk_1m => cnt_h[2].CLK
clk_1m => cnt_h[3].CLK
clk_1m => cnt_h[4].CLK
clk_1m => cnt_h[5].CLK
clk_1m => cnt_h[6].CLK
clk_1m => cnt_h[7].CLK
clk_1m => cnt_h[8].CLK
clk_1m => cnt_h[9].CLK
clk_1m => cnt_h[10].CLK
clk_1m => cnt_h[11].CLK
clk_1m => cnt_h[12].CLK
clk_1m => cnt_h[13].CLK
clk_1m => cnt_h[14].CLK
clk_1m => cnt_h[15].CLK
clk_1m => cnt_l[0].CLK
clk_1m => cnt_l[1].CLK
clk_1m => cnt_l[2].CLK
clk_1m => cnt_l[3].CLK
clk_1m => cnt_l[4].CLK
clk_1m => cnt_l[5].CLK
clk_1m => cnt_l[6].CLK
clk_1m => cnt_l[7].CLK
clk_1m => cnt_l[8].CLK
clk_1m => cnt_l[9].CLK
clk_1m => cnt_l[10].CLK
clk_1m => cnt_l[11].CLK
clk_1m => cnt_l[12].CLK
clk_1m => cnt_l[13].CLK
clk_1m => cnt_l[14].CLK
clk_1m => cnt_l[15].CLK
clk_1m => IR_reg[0].CLK
clk_1m => IR_reg[1].CLK
clk_1m => IR_reg[2].CLK
clk_1m => state~3.DATAIN
clk_1m => IR_code~4.DATAIN
clk_1m => Flag_LVL.CLK
clk_1m => Flag_HVL.CLK
ir => cnt_l[0].ACLR
ir => cnt_l[1].ACLR
ir => cnt_l[2].ACLR
ir => cnt_l[3].ACLR
ir => cnt_l[4].ACLR
ir => cnt_l[5].ACLR
ir => cnt_l[6].ACLR
ir => cnt_l[7].ACLR
ir => cnt_l[8].ACLR
ir => cnt_l[9].ACLR
ir => cnt_l[10].ACLR
ir => cnt_l[11].ACLR
ir => cnt_l[12].ACLR
ir => cnt_l[13].ACLR
ir => cnt_l[14].ACLR
ir => cnt_l[15].ACLR
ir => IR_reg[0].DATAIN
ir => cnt_h[0].ACLR
ir => cnt_h[1].ACLR
ir => cnt_h[2].ACLR
ir => cnt_h[3].ACLR
ir => cnt_h[4].ACLR
ir => cnt_h[5].ACLR
ir => cnt_h[6].ACLR
ir => cnt_h[7].ACLR
ir => cnt_h[8].ACLR
ir => cnt_h[9].ACLR
ir => cnt_h[10].ACLR
ir => cnt_h[11].ACLR
ir => cnt_h[12].ACLR
ir => cnt_h[13].ACLR
ir => cnt_h[14].ACLR
ir => cnt_h[15].ACLR
Code[0] <= Code[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Code[1] <= Code[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Code[2] <= Code[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Code[3] <= Code[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Code[4] <= Code[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Code[5] <= Code[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Code[6] <= Code[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Code[7] <= Code[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|signal|sin_block:inst5
sin7 <= q[7].DB_MAX_OUTPUT_PORT_TYPE
clk_in => ROM_sin:inst.clock
clk_in => address:inst1.CLK
sin6 <= q[6].DB_MAX_OUTPUT_PORT_TYPE
sin5 <= q[5].DB_MAX_OUTPUT_PORT_TYPE
sin4 <= q[4].DB_MAX_OUTPUT_PORT_TYPE
sin3 <= q[3].DB_MAX_OUTPUT_PORT_TYPE
sin2 <= q[2].DB_MAX_OUTPUT_PORT_TYPE
sin1 <= q[1].DB_MAX_OUTPUT_PORT_TYPE
sin0 <= q[0].DB_MAX_OUTPUT_PORT_TYPE


|signal|sin_block:inst5|ROM_sin:inst
address[0] => address[0].IN1
address[1] => address[1].IN1
address[2] => address[2].IN1
address[3] => address[3].IN1
address[4] => address[4].IN1
address[5] => address[5].IN1
address[6] => address[6].IN1
address[7] => address[7].IN1
clock => clock.IN1
q[0] <= altsyncram:altsyncram_component.q_a
q[1] <= altsyncram:altsyncram_component.q_a
q[2] <= altsyncram:altsyncram_component.q_a
q[3] <= altsyncram:altsyncram_component.q_a
q[4] <= altsyncram:altsyncram_component.q_a
q[5] <= altsyncram:altsyncram_component.q_a
q[6] <= altsyncram:altsyncram_component.q_a
q[7] <= altsyncram:altsyncram_component.q_a


|signal|sin_block:inst5|ROM_sin:inst|altsyncram:altsyncram_component
wren_a => ~NO_FANOUT~
rden_a => ~NO_FANOUT~
wren_b => ~NO_FANOUT~
rden_b => ~NO_FANOUT~
data_a[0] => ~NO_FANOUT~
data_a[1] => ~NO_FANOUT~
data_a[2] => ~NO_FANOUT~
data_a[3] => ~NO_FANOUT~
data_a[4] => ~NO_FANOUT~
data_a[5] => ~NO_FANOUT~
data_a[6] => ~NO_FANOUT~
data_a[7] => ~NO_FANOUT~
data_b[0] => ~NO_FANOUT~
address_a[0] => altsyncram_e2b1:auto_generated.address_a[0]
address_a[1] => altsyncram_e2b1:auto_generated.address_a[1]
address_a[2] => altsyncram_e2b1:auto_generated.address_a[2]
address_a[3] => altsyncram_e2b1:auto_generated.address_a[3]
address_a[4] => altsyncram_e2b1:auto_generated.address_a[4]
address_a[5] => altsyncram_e2b1:auto_generated.address_a[5]
address_a[6] => altsyncram_e2b1:auto_generated.address_a[6]
address_a[7] => altsyncram_e2b1:auto_generated.address_a[7]
address_b[0] => ~NO_FANOUT~
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_e2b1:auto_generated.clock0
clock1 => ~NO_FANOUT~
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= altsyncram_e2b1:auto_generated.q_a[0]
q_a[1] <= altsyncram_e2b1:auto_generated.q_a[1]
q_a[2] <= altsyncram_e2b1:auto_generated.q_a[2]
q_a[3] <= altsyncram_e2b1:auto_generated.q_a[3]
q_a[4] <= altsyncram_e2b1:auto_generated.q_a[4]
q_a[5] <= altsyncram_e2b1:auto_generated.q_a[5]
q_a[6] <= altsyncram_e2b1:auto_generated.q_a[6]
q_a[7] <= altsyncram_e2b1:auto_generated.q_a[7]
q_b[0] <= <GND>
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|signal|sin_block:inst5|ROM_sin:inst|altsyncram:altsyncram_component|altsyncram_e2b1:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[0] => ram_block1a2.PORTAADDR
address_a[0] => ram_block1a3.PORTAADDR
address_a[0] => ram_block1a4.PORTAADDR
address_a[0] => ram_block1a5.PORTAADDR
address_a[0] => ram_block1a6.PORTAADDR
address_a[0] => ram_block1a7.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[1] => ram_block1a2.PORTAADDR1
address_a[1] => ram_block1a3.PORTAADDR1
address_a[1] => ram_block1a4.PORTAADDR1
address_a[1] => ram_block1a5.PORTAADDR1
address_a[1] => ram_block1a6.PORTAADDR1
address_a[1] => ram_block1a7.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[2] => ram_block1a2.PORTAADDR2
address_a[2] => ram_block1a3.PORTAADDR2
address_a[2] => ram_block1a4.PORTAADDR2
address_a[2] => ram_block1a5.PORTAADDR2
address_a[2] => ram_block1a6.PORTAADDR2
address_a[2] => ram_block1a7.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[3] => ram_block1a1.PORTAADDR3
address_a[3] => ram_block1a2.PORTAADDR3
address_a[3] => ram_block1a3.PORTAADDR3
address_a[3] => ram_block1a4.PORTAADDR3
address_a[3] => ram_block1a5.PORTAADDR3
address_a[3] => ram_block1a6.PORTAADDR3
address_a[3] => ram_block1a7.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[4] => ram_block1a1.PORTAADDR4
address_a[4] => ram_block1a2.PORTAADDR4
address_a[4] => ram_block1a3.PORTAADDR4
address_a[4] => ram_block1a4.PORTAADDR4
address_a[4] => ram_block1a5.PORTAADDR4
address_a[4] => ram_block1a6.PORTAADDR4
address_a[4] => ram_block1a7.PORTAADDR4
address_a[5] => ram_block1a0.PORTAADDR5
address_a[5] => ram_block1a1.PORTAADDR5
address_a[5] => ram_block1a2.PORTAADDR5
address_a[5] => ram_block1a3.PORTAADDR5
address_a[5] => ram_block1a4.PORTAADDR5
address_a[5] => ram_block1a5.PORTAADDR5
address_a[5] => ram_block1a6.PORTAADDR5
address_a[5] => ram_block1a7.PORTAADDR5
address_a[6] => ram_block1a0.PORTAADDR6
address_a[6] => ram_block1a1.PORTAADDR6
address_a[6] => ram_block1a2.PORTAADDR6
address_a[6] => ram_block1a3.PORTAADDR6
address_a[6] => ram_block1a4.PORTAADDR6
address_a[6] => ram_block1a5.PORTAADDR6
address_a[6] => ram_block1a6.PORTAADDR6
address_a[6] => ram_block1a7.PORTAADDR6
address_a[7] => ram_block1a0.PORTAADDR7
address_a[7] => ram_block1a1.PORTAADDR7
address_a[7] => ram_block1a2.PORTAADDR7
address_a[7] => ram_block1a3.PORTAADDR7
address_a[7] => ram_block1a4.PORTAADDR7
address_a[7] => ram_block1a5.PORTAADDR7
address_a[7] => ram_block1a6.PORTAADDR7
address_a[7] => ram_block1a7.PORTAADDR7
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a1.CLK0
clock0 => ram_block1a2.CLK0
clock0 => ram_block1a3.CLK0
clock0 => ram_block1a4.CLK0
clock0 => ram_block1a5.CLK0
clock0 => ram_block1a6.CLK0
clock0 => ram_block1a7.CLK0
q_a[0] <= ram_block1a0.PORTADATAOUT
q_a[1] <= ram_block1a1.PORTADATAOUT
q_a[2] <= ram_block1a2.PORTADATAOUT
q_a[3] <= ram_block1a3.PORTADATAOUT
q_a[4] <= ram_block1a4.PORTADATAOUT
q_a[5] <= ram_block1a5.PORTADATAOUT
q_a[6] <= ram_block1a6.PORTADATAOUT
q_a[7] <= ram_block1a7.PORTADATAOUT


|signal|sin_block:inst5|address:inst1
CLK => add[0]~reg0.CLK
CLK => add[1]~reg0.CLK
CLK => add[2]~reg0.CLK
CLK => add[3]~reg0.CLK
CLK => add[4]~reg0.CLK
CLK => add[5]~reg0.CLK
CLK => add[6]~reg0.CLK
CLK => add[7]~reg0.CLK
add[0] <= add[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
add[1] <= add[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
add[2] <= add[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
add[3] <= add[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
add[4] <= add[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
add[5] <= add[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
add[6] <= add[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
add[7] <= add[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


